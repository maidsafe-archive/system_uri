# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
rust: stable
services: docker
sudo: required

addons:
  apt:
    packages:
      - desktop-file-utils
      - xdg-utils
      - gcc-multilib
      - musl
      - musl-dev
      - musl-tools

env:
  global:
    - RUST_BACKTRACE=1

    # auto release features
    - CRATE_NAME=system_uri
    - TARGET=x86_64-unknown-linux-gnu
    # We don't run tests in cross
    - DISABLE_TESTS=1

matrix:
  fast_finish: true
  allow_failures:
      - rust: nightly
  include:
    # for clippy:
    - env: >
        TARGET=x86_64-unknown-linux-gnu
      os: linux
      rust: nightly

    # Linux
    - env: >
        TARGET=i686-unknown-linux-gnu
        TARGET_NAME=linux-x32
      os: linux

    - env: >
        TARGET=x86_64-unknown-linux-gnu
        TARGET_NAME=linux-x64
      os: linux

    - env: >
        TARGET=i686-unknown-linux-musl
      os: linux
    - env: >
        TARGET=x86_64-unknown-linux-musl
      os: linux

    # OSX
    - env: >
        TARGET=i686-apple-darwin
        TARGET_NAME=darwin-x32
        MACOSX_DEPLOYMENT_TARGET=10.7
      os: osx
    - env: >
        TARGET=x86_64-apple-darwin
        TARGET_NAME=darwin-x64
        MACOSX_DEPLOYMENT_TARGET=10.7
      os: osx

before_install: set -e

install:
  - sh .ci/install.sh
  - source ~/.cargo/env || true

before_script:
  - (which cargo-install-update && cargo install-update cargo-update) || cargo install cargo-update
  - (which rustfmt && cargo install-update rustfmt) || cargo install rustfmt
  - (which cargo-prune && cargo install-update cargo-prune) || cargo install cargo-prune

script:
  - if [ "${TRAVIS_RUST_VERSION}" = stable ] && [ "${TRAVIS_OS_NAME}" = linux ]; then
      (
        set -x;
        cargo fmt -- --write-mode=diff &&
        cargo test  --verbose --release
      );
    fi
  - curl -sSL https://github.com/maidsafe/QA/raw/master/bash_scripts/travis/run_clippy.sh | bash
  - sh .ci/script.sh

after_script: set +e

before_deploy:
  - sh .ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt YOUR_TOKEN`
  # - Paste the output down here
  api_key:
    secure: "VbdxST1+rBprNucUj6FgK9Tf1V8j6681djhUW2vvXGzr3RgRbgGRYFU1Izb9YCXCMOv/u4f7B/1ONap6Nin5ubcHiuEyODzrIFEE8VVvUBIdCDRr8hdgR0RZZ2sIkOWlXaaK+pQuYAaI3RpWEXBCDw2LBHNaG+lr0399UPa4W6YTETwf/85ATR4UoBD9IIUdwBf/KDrnJdJK2dqADz6T2D7u9tvT+CFNp/AwJbrvLaivwxzRGN21CAEie5dyl4F7o1AshKPxbcwU5dqVBHW7kCX5/C7dLu+56FrsFIVEd6DdA2hACaLpEKkxah6IXEVmMqFwv4FujmYBDYqrjb81D14QtjA/kl8nM5+P5Zv+GLsByvxrd97hxO4tS7I5nyugFbKvlitKBkv9d9yX9N1Sbxprlj1CJ8Oft9twiKFKfVp0rDtVgUvNn7ErThIRRcvD40etjbu6HTklX9w5v5LjjmgLW9LhpLBH27zmviESwY64IkHPrWUVC0Y+0wzQDNgOD1Pw7zVQYvRZ09W8TF/tQCgk7+4uyo6NLjPZI+iehBzkzpzy9yZx8XtqJquZtWgo+dxf0NRWnElXIiUBfitj6RzZKJtENl+KjunmSgTK4OkjI7xOkSMYFxNy3/HXnpisB2l9QpQW+BPYYg9ip9s0XGVyyZ4+HsLp8XzXu+s2Zm4="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  - cargo prune
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master